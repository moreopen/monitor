<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="com.moreopen.monitor.console.dao.bean.config.MonitorConfigIpPortPOJO">
	<typeAlias alias="monitorConfigIpPortPOJO"
		type="com.moreopen.monitor.console.dao.bean.config.MonitorConfigIpPortPOJO" />
		
	<resultMap id="monitorConfigIpPortPOJOResult" class="monitorConfigIpPortPOJO">

		<result column="ID" jdbcType="Integer" property="id" />
		<result column="monitorEventId" jdbcType="VARCHAR" property="monitorEventId" />
		<result column="monitorEventName" jdbcType="VARCHAR" property="monitorEventName" />
		<result column="monitorEventIpPort" jdbcType="VARCHAR" property="monitorEventIpPort" />
		<result column="status" jdbcType="VARCHAR" property="status" />
		<result column="createTime" jdbcType="Timestamp" property="createTime" />
		<result column="updateTime" jdbcType="Timestamp" property="updateTime"/>
		<result column="createUserId" jdbcType="VARCHAR" property="createUserId"/>
		<result column="updateUserId" jdbcType="VARCHAR" property="updateUserId"/>
		<result column="createUserName" jdbcType="VARCHAR" property="createUserName"/>
		<result column="updateUserName" jdbcType="VARCHAR" property="updateUserName"/>
		<result column="createTimeFormat" jdbcType="VARCHAR" property="createTimeFormat"/>
		<result column="updateTimeFormat" jdbcType="VARCHAR" property="updateTimeFormat"/>
		<result column="appName" jdbcType="VARCHAR" property="appName"/>
	</resultMap>
	
	<!-- 根据条件查询-->
	<select id="selectByMap" parameterClass="java.util.Map"  resultMap="monitorConfigIpPortPOJOResult">
	   select temp.*,monitor_user.user_name as updateUserName
	     from(	
						SELECT 
							ip.ID AS ID,
							ip.monitor_event_id as monitorEventId,
							monitor_config_event.monitor_event_name as monitorEventName,
							monitor_config_event.app_id,
							monitor_config_app.app_name as appName,
							ip.monitor_event_ipport as monitorEventIpPort,
							ip.status as status,
							ip.create_time as createTime,
							ip.update_time as updateTime,
							ip.create_userid as createUserId,
							ip.update_userid as updateUserId,
							monitor_user.user_name as createUserName,
							date_format(ip.CREATE_TIME,'%Y-%m-%d %T') as createTimeFormat,
							date_format(ip.UPDATE_TIME,'%Y-%m-%d %T') as updateTimeFormat
						from monitor_config_ipport as ip
						left join monitor_user
						on ip.create_userid=monitor_user.user_id
						LEFT JOIN monitor_config_event
						on ip.monitor_event_id=monitor_config_event.monitor_event_id
						LEFT JOIN monitor_config_app
						on monitor_config_event.app_id=monitor_config_app.app_id
			)as temp left join monitor_user
			on temp.updateUserId=monitor_user.user_id
			<dynamic prepend="where">
			    <isNotNull property="eventId" prepend="and">
			        temp.monitorEventId=#eventId# 
			    </isNotNull>
			</dynamic>
			<dynamic>
				<isNotNull property="startPostion">
						limit #startPostion#,#pageSize#
				</isNotNull>
			</dynamic>
	</select>
	
	<!--  查询总条数-->
	<select id="count" resultClass="java.lang.Integer" parameterClass="java.util.Map">
		SELECT COUNT(*) FROM monitor_config_ipport
		<dynamic prepend="where">
		    <isNotNull property="eventId">
		        monitor_event_id=#eventId#
		    </isNotNull>
		</dynamic>
	</select>
	
	<!-- 添加ipport -->
	<insert id="insert" parameterClass="monitorConfigIpPortPOJO">
		insert into monitor_config_ipport
		(
			monitor_event_id,
			monitor_event_ipport,
			status,
			create_time,
			create_userid,
			update_time,
			update_userid
		) values(
			#monitorEventId#,
			#monitorEventIpPort#,
			#status#,
			#createTime#,
			#createUserId#,
			#updateTime#,
			#updateUserId#
		)
		 
	</insert>
	
	<update id="update" parameterClass="monitorConfigIpPortPOJO">
	    
	    update monitor_config_ipport 
	    set
	    monitor_event_ipport=#monitorEventIpPort#,
	    update_time=#updateTime#,
	    update_userid=#updateUserId# ,
	    monitor_event_id=#monitorEventId#
	    where id=#id#
	</update>
	
	<!-- 删除 -->
	<delete id="deleteByPrimaryKey" parameterClass="java.lang.Integer">
		delete from monitor_config_ipport where id=#id#	    
	</delete>
	
	<!-- 根据eventId -->
	<delete id="removeByEventId" parameterClass="java.lang.String">
		delete from monitor_config_ipport where monitor_event_id=#monitorEventId#	    
	</delete>
	
	<!-- 根据IP搜索 -->
	<select id="searchByIp" parameterClass="java.util.Map" resultMap="monitorConfigIpPortPOJOResult">
	  select temp.*,monitor_user.user_name as updateUserName
	     from(	
						SELECT 
							ip.ID AS ID,
							ip.monitor_event_id as monitorEventId,
							monitor_config_event.monitor_event_name as monitorEventName,
							monitor_config_event.app_id,
							monitor_config_app.app_name as appName,
							ip.monitor_event_ipport as monitorEventIpPort,
							ip.status as status,
							ip.create_time as createTime,
							ip.update_time as updateTime,
							ip.create_userid as createUserId,
							ip.update_userid as updateUserId,
							monitor_user.user_name as createUserName,
							date_format(ip.CREATE_TIME,'%Y-%m-%d %T') as createTimeFormat,
							date_format(ip.UPDATE_TIME,'%Y-%m-%d %T') as updateTimeFormat
						from monitor_config_ipport as ip
						left join monitor_user
						on ip.create_userid=monitor_user.user_id
						LEFT JOIN monitor_config_event
						on ip.monitor_event_id=monitor_config_event.monitor_event_id
						LEFT JOIN monitor_config_app
						on monitor_config_event.app_id=monitor_config_app.app_id
			)as temp left join monitor_user
			on temp.updateUserId=monitor_user.user_id
				<dynamic prepend="where">
				    <isNotNull prepend="and" property="ip">
				        temp.monitorEventIpPort like '%$ip$%'
				    </isNotNull>
				    <isNotNull prepend="and" property="eventId">
				        monitorEventId = #eventId#
				    </isNotNull>
				</dynamic>
			
	</select>
	
</sqlMap>